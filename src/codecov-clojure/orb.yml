version: 2.1

description: |
  Automate Codecov reporting for Clojure projects. Source:
  https://github.com/circleci-public/circleci-orbs

examples:
  upload_results:
    description: Upload some Clojure coverage results to Codecov
    usage:
      version: 2.1

      orbs:
        codecov-clojure: circleci/codecov-clojure@1.0.0

      workflows:
        build-test:
          jobs:
            - build

            - codecov-clojure/code-coverage:
                requires:
                  - build
                coverage-file: target/coverage/codecov.json
                cache-key: code-coverage-{{ checksum "project.clj" }}

      jobs:
        build:
          executor: codecov-clojure/default
          steps:
            - checkout
            - run: echo "do some build stuff" # etc

orbs:
  codecov: circleci/codecov@0.0.2

executors:
  default:
    parameters:
      tag:
        type: string
        description: Pick a specific circleci/clojure image variant from https://hub.docker.com/r/circleci/clojure/tags
        default: "latest"
    docker:
      - image: circleci/clojure:<< parameters.tag >>

jobs:
  code-coverage:
    description: Run lein coverage, Save cache ( if required ) and upload Coverage results.
    parameters:
      coverage-file:
        description: the path to coverage.json
        type: string
        default: target/coverage/codecov.json
      cache-key:
        description: cache key to use, if this is likely to share cache with another job. currently only supports one key.
        type: string
        default: code-coverage-{{ checksum "project.clj" }}
      circlecitest:
        description: tests are run with the circleci.test test runner instead of clojure.test
        type: boolean
        default: false
    docker:
      - image: circleci/clojure
    steps:
      - checkout
      - restore_cache:
          keys:
            - << parameters.cache-key >>
      - run: lein cloverage --codecov <<# parameters.circlecitest >> --runner circleci.test <</ parameters.circlecitest >>
      - save_cache:
          paths:
            - ~/.m2
            - ~/.lein
          key: << parameters.cache-key >>
      - store_artifacts:
          path: target/coverage
      - codecov/upload:
          path: << parameters.coverage-file >>
